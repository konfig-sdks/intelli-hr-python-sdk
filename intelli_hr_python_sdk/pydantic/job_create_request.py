# coding: utf-8

"""
    intelliHR Public API

    You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)

    The version of the OpenAPI document: V1
    Contact: support@intellihr.co
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from intelli_hr_python_sdk.pydantic.job_create_request_business_entity import JobCreateRequestBusinessEntity
from intelli_hr_python_sdk.pydantic.job_create_request_business_unit import JobCreateRequestBusinessUnit
from intelli_hr_python_sdk.pydantic.job_create_request_custom_fields import JobCreateRequestCustomFields
from intelli_hr_python_sdk.pydantic.job_create_request_employment_condition import JobCreateRequestEmploymentCondition
from intelli_hr_python_sdk.pydantic.job_create_request_establishment import JobCreateRequestEstablishment
from intelli_hr_python_sdk.pydantic.job_create_request_location import JobCreateRequestLocation
from intelli_hr_python_sdk.pydantic.job_create_request_pay_grade import JobCreateRequestPayGrade
from intelli_hr_python_sdk.pydantic.job_create_request_person import JobCreateRequestPerson
from intelli_hr_python_sdk.pydantic.job_create_request_recruitment import JobCreateRequestRecruitment
from intelli_hr_python_sdk.pydantic.job_create_request_remuneration_schedule import JobCreateRequestRemunerationSchedule
from intelli_hr_python_sdk.pydantic.job_create_request_supervisor_job import JobCreateRequestSupervisorJob
from intelli_hr_python_sdk.pydantic.job_create_request_supervisor_person import JobCreateRequestSupervisorPerson
from intelli_hr_python_sdk.pydantic.job_create_request_work_class import JobCreateRequestWorkClass
from intelli_hr_python_sdk.pydantic.job_create_request_work_type import JobCreateRequestWorkType

class JobCreateRequest(BaseModel):
    person: JobCreateRequestPerson = Field(alias='person')

    # The date this [Job](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
    company_start_date: str = Field(alias='companyStartDate')

    # The job name assigned to this [Job](https://developers.intellihr.io/docs/v1/). Will attempt to match to an existing [Position Title](https://developers.intellihr.io/docs/v1/), otherwise creates a new [Position Title](https://developers.intellihr.io/docs/v1/).
    name: str = Field(alias='name')

    business_entity: JobCreateRequestBusinessEntity = Field(alias='businessEntity')

    business_unit: JobCreateRequestBusinessUnit = Field(alias='businessUnit')

    work_class: JobCreateRequestWorkClass = Field(alias='workClass')

    # The <b>exclusive</b> date this [Job](https://developers.intellihr.io/docs/v1/) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
    company_end_date: typing.Optional[str] = Field(None, alias='companyEndDate')

    # WARNING: This property is deprecated
    # The date this [Job](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
    start_date: typing.Optional[str] = Field(None, alias='startDate')

    # WARNING: This property is deprecated
    # The <b>exclusive</b> date this [Job](https://developers.intellihr.io/docs/v1/) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `endDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
    end_date: typing.Optional[str] = Field(None, alias='endDate')

    establishment: typing.Optional[JobCreateRequestEstablishment] = Field(None, alias='establishment')

    supervisor_person: typing.Optional[JobCreateRequestSupervisorPerson] = Field(None, alias='supervisorPerson')

    supervisor_job: typing.Optional[JobCreateRequestSupervisorJob] = Field(None, alias='supervisorJob')

    location: typing.Optional[JobCreateRequestLocation] = Field(None, alias='location')

    work_type: typing.Optional[JobCreateRequestWorkType] = Field(None, alias='workType')

    # The full time equivalent of this [Job](https://developers.intellihr.io/docs/v1/). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.
    fte: typing.Optional[str] = Field(None, alias='fte')

    pay_grade: typing.Optional[JobCreateRequestPayGrade] = Field(None, alias='payGrade')

    employment_condition: typing.Optional[JobCreateRequestEmploymentCondition] = Field(None, alias='employmentCondition')

    remuneration_schedule: typing.Optional[JobCreateRequestRemunerationSchedule] = Field(None, alias='remunerationSchedule')

    recruitment: typing.Optional[JobCreateRequestRecruitment] = Field(None, alias='recruitment')

    custom_fields: typing.Optional[JobCreateRequestCustomFields] = Field(None, alias='customFields')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
