# coding: utf-8

"""
    intelliHR Public API

    You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)

    The version of the OpenAPI document: V1
    Contact: support@intellihr.co
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from intelli_hr_python_sdk.pydantic.custom_fields_response import CustomFieldsResponse
from intelli_hr_python_sdk.pydantic.trainings_list_data_item_job import TrainingsListDataItemJob
from intelli_hr_python_sdk.pydantic.trainings_list_data_item_person import TrainingsListDataItemPerson
from intelli_hr_python_sdk.pydantic.trainings_list_data_item_provider import TrainingsListDataItemProvider
from intelli_hr_python_sdk.pydantic.trainings_list_data_item_status import TrainingsListDataItemStatus
from intelli_hr_python_sdk.pydantic.trainings_list_data_item_type import TrainingsListDataItemType

class TrainingsListDataItem(BaseModel):
    # The identifier string for the [Training](https://developers.intellihr.io/docs/v1/).
    id: typing.Optional[str] = Field(None, alias='id')

    # User friendly name given to this [Training](https://developers.intellihr.io/docs/v1/).
    name: typing.Optional[str] = Field(None, alias='name')

    status: typing.Optional[TrainingsListDataItemStatus] = Field(None, alias='status')

    person: typing.Optional[TrainingsListDataItemPerson] = Field(None, alias='person')

    job: typing.Optional[TrainingsListDataItemJob] = Field(None, alias='job')

    # The [Coordinator](https://developers.intellihr.io/docs/v1/) who did the [Training](https://developers.intellihr.io/docs/v1/). This data is optional and will be null when not stored.
    coordinator: typing.Optional[typing.Union[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]], none_type]] = Field(None, alias='coordinator')

    # How many hours were spent on this [Training](https://developers.intellihr.io/docs/v1/).
    hours: typing.Optional[typing.Union[none_type, str]] = Field(None, alias='hours')

    # The currency used for this [Training](https://developers.intellihr.io/docs/v1/).
    currency: typing.Optional[str] = Field(None, alias='currency')

    # The cost of this [Training](https://developers.intellihr.io/docs/v1/).
    cost: typing.Optional[typing.Union[none_type, str]] = Field(None, alias='cost')

    provider: typing.Optional[TrainingsListDataItemProvider] = Field(None, alias='provider')

    type: typing.Optional[TrainingsListDataItemType] = Field(None, alias='type')

    # The timestamp the [Training](https://developers.intellihr.io/docs/v1/) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).
    completion_date: typing.Optional[typing.Union[str, none_type]] = Field(None, alias='completionDate')

    # When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).
    created_at: typing.Optional[str] = Field(None, alias='createdAt')

    # When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).
    updated_at: typing.Optional[str] = Field(None, alias='updatedAt')

    # Custom Fields defined on this training with their values.
    custom_fields: typing.Optional[CustomFieldsResponse] = Field(None, alias='customFields')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
