# coding: utf-8

"""
    intelliHR Public API

    You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)

    The version of the OpenAPI document: V1
    Contact: support@intellihr.co
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class JobPatchResponseMeta(BaseModel):
    # The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).
    as_at: typing.Optional[str] = Field(None, alias='asAt')

    # WARNING: This property is deprecated
    # A link to fetch all [Workflows](https://developers.intellihr.io/docs/v1/) that belong under the Workflow Event for this Job update. To be **deprecated**, it is recommended to use **workflowEventIds** to construct links.
    workflow_event: typing.Optional[typing.Union[str, none_type]] = Field(None, alias='workflowEvent')

    # WARNING: This property is deprecated
    # The identifier string for the [Workflow Event](https://developers.intellihr.io/docs/v1/). To be **deprecated**, it is recommended to use **workflowEventIds**.
    workflow_event_id: typing.Optional[typing.Union[str, none_type]] = Field(None, alias='workflowEventId')

    # List of string identifiers for [Workflow Events](https://developers.intellihr.io/docs/v1/). This will not be defined if there is no workflowEvents in the response
    workflow_event_ids: typing.Optional[typing.List[str]] = Field(None, alias='workflowEventIds')

    # The identifier string for the api request.
    request_id: typing.Optional[str] = Field(None, alias='requestId')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
