# coding: utf-8

"""
    intelliHR Public API

    You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)

    The version of the OpenAPI document: V1
    Contact: support@intellihr.co
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from intelli_hr_python_sdk import schemas  # noqa: F401


class LeaveUpdateResponseData(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            
            
            class id(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 36
                    min_length = 36
            startDate = schemas.StrSchema
            endDate = schemas.StrSchema
            isEndDateConfirmed = schemas.BoolSchema
        
            @staticmethod
            def leaveType() -> typing.Type['LeaveUpdateResponseDataLeaveType']:
                return LeaveUpdateResponseDataLeaveType
        
            @staticmethod
            def job() -> typing.Type['LeaveUpdateResponseDataJob']:
                return LeaveUpdateResponseDataJob
        
            @staticmethod
            def person() -> typing.Type['LeaveUpdateResponseDataPerson']:
                return LeaveUpdateResponseDataPerson
            __annotations__ = {
                "id": id,
                "startDate": startDate,
                "endDate": endDate,
                "isEndDateConfirmed": isEndDateConfirmed,
                "leaveType": leaveType,
                "job": job,
                "person": person,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startDate"]) -> MetaOapg.properties.startDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endDate"]) -> MetaOapg.properties.endDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isEndDateConfirmed"]) -> MetaOapg.properties.isEndDateConfirmed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["leaveType"]) -> 'LeaveUpdateResponseDataLeaveType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["job"]) -> 'LeaveUpdateResponseDataJob': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["person"]) -> 'LeaveUpdateResponseDataPerson': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "startDate", "endDate", "isEndDateConfirmed", "leaveType", "job", "person", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startDate"]) -> typing.Union[MetaOapg.properties.startDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endDate"]) -> typing.Union[MetaOapg.properties.endDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isEndDateConfirmed"]) -> typing.Union[MetaOapg.properties.isEndDateConfirmed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["leaveType"]) -> typing.Union['LeaveUpdateResponseDataLeaveType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["job"]) -> typing.Union['LeaveUpdateResponseDataJob', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["person"]) -> typing.Union['LeaveUpdateResponseDataPerson', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "startDate", "endDate", "isEndDateConfirmed", "leaveType", "job", "person", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        startDate: typing.Union[MetaOapg.properties.startDate, str, schemas.Unset] = schemas.unset,
        endDate: typing.Union[MetaOapg.properties.endDate, str, schemas.Unset] = schemas.unset,
        isEndDateConfirmed: typing.Union[MetaOapg.properties.isEndDateConfirmed, bool, schemas.Unset] = schemas.unset,
        leaveType: typing.Union['LeaveUpdateResponseDataLeaveType', schemas.Unset] = schemas.unset,
        job: typing.Union['LeaveUpdateResponseDataJob', schemas.Unset] = schemas.unset,
        person: typing.Union['LeaveUpdateResponseDataPerson', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'LeaveUpdateResponseData':
        return super().__new__(
            cls,
            *args,
            id=id,
            startDate=startDate,
            endDate=endDate,
            isEndDateConfirmed=isEndDateConfirmed,
            leaveType=leaveType,
            job=job,
            person=person,
            _configuration=_configuration,
            **kwargs,
        )

from intelli_hr_python_sdk.model.leave_update_response_data_job import LeaveUpdateResponseDataJob
from intelli_hr_python_sdk.model.leave_update_response_data_leave_type import LeaveUpdateResponseDataLeaveType
from intelli_hr_python_sdk.model.leave_update_response_data_person import LeaveUpdateResponseDataPerson
