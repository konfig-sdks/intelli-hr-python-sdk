# coding: utf-8

"""
    intelliHR Public API

    You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)

    The version of the OpenAPI document: V1
    Contact: support@intellihr.co
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from intelli_hr_python_sdk import schemas  # noqa: F401


class PeopleDocumentsFindResponseDataItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            
            
            class id(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 36
                    min_length = 36
            filename = schemas.StrSchema
            downloadUrlAbsolute = schemas.StrSchema
            extension = schemas.StrSchema
            size = schemas.IntSchema
            humanReadableSize = schemas.StrSchema
            uploadStatus = schemas.AnyTypeSchema
            __annotations__ = {
                "id": id,
                "filename": filename,
                "downloadUrlAbsolute": downloadUrlAbsolute,
                "extension": extension,
                "size": size,
                "humanReadableSize": humanReadableSize,
                "uploadStatus": uploadStatus,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["filename"]) -> MetaOapg.properties.filename: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["downloadUrlAbsolute"]) -> MetaOapg.properties.downloadUrlAbsolute: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["extension"]) -> MetaOapg.properties.extension: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["size"]) -> MetaOapg.properties.size: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["humanReadableSize"]) -> MetaOapg.properties.humanReadableSize: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uploadStatus"]) -> MetaOapg.properties.uploadStatus: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "filename", "downloadUrlAbsolute", "extension", "size", "humanReadableSize", "uploadStatus", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["filename"]) -> typing.Union[MetaOapg.properties.filename, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["downloadUrlAbsolute"]) -> typing.Union[MetaOapg.properties.downloadUrlAbsolute, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["extension"]) -> typing.Union[MetaOapg.properties.extension, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["size"]) -> typing.Union[MetaOapg.properties.size, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["humanReadableSize"]) -> typing.Union[MetaOapg.properties.humanReadableSize, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uploadStatus"]) -> typing.Union[MetaOapg.properties.uploadStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "filename", "downloadUrlAbsolute", "extension", "size", "humanReadableSize", "uploadStatus", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        filename: typing.Union[MetaOapg.properties.filename, str, schemas.Unset] = schemas.unset,
        downloadUrlAbsolute: typing.Union[MetaOapg.properties.downloadUrlAbsolute, str, schemas.Unset] = schemas.unset,
        extension: typing.Union[MetaOapg.properties.extension, str, schemas.Unset] = schemas.unset,
        size: typing.Union[MetaOapg.properties.size, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        humanReadableSize: typing.Union[MetaOapg.properties.humanReadableSize, str, schemas.Unset] = schemas.unset,
        uploadStatus: typing.Union[MetaOapg.properties.uploadStatus, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PeopleDocumentsFindResponseDataItem':
        return super().__new__(
            cls,
            *args,
            id=id,
            filename=filename,
            downloadUrlAbsolute=downloadUrlAbsolute,
            extension=extension,
            size=size,
            humanReadableSize=humanReadableSize,
            uploadStatus=uploadStatus,
            _configuration=_configuration,
            **kwargs,
        )
