# coding: utf-8

"""
    intelliHR Public API

    You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)

    The version of the OpenAPI document: V1
    Contact: support@intellihr.co
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from intelli_hr_python_sdk.type.job_patch_request_remuneration_schedule_additions import JobPatchRequestRemunerationScheduleAdditions
from intelli_hr_python_sdk.type.job_patch_request_remuneration_schedule_additions_to_total import JobPatchRequestRemunerationScheduleAdditionsToTotal
from intelli_hr_python_sdk.type.job_patch_request_remuneration_schedule_breakdowns import JobPatchRequestRemunerationScheduleBreakdowns
from intelli_hr_python_sdk.type.job_patch_request_remuneration_schedule_custom_fields import JobPatchRequestRemunerationScheduleCustomFields
from intelli_hr_python_sdk.type.job_patch_request_remuneration_schedule_employment_condition import JobPatchRequestRemunerationScheduleEmploymentCondition

class RequiredJobPatchRequestRemunerationSchedule(TypedDict):
    # The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.
    payCycle: str

    # How many hours worked per payCycle.    Setting hours to 0 (zero) signifies that the hours are variable per pay cycle
    hoursPerCycle: typing.Union[int, float]

class OptionalJobPatchRequestRemunerationSchedule(TypedDict, total=False):
    # The method in which this remuneration schedule is paid. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.
    type: str

    # The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).
    currency: str

    # WARNING: This property is deprecated
    employmentCondition: JobPatchRequestRemunerationScheduleEmploymentCondition

    # The Base Salary paid yearly, this is only required if the Remuneration Schedule Type is \"Annual Salary\". Any number exceeding 8 decimal places will be rounded up.
    baseAnnualSalary: typing.Union[int, float]

    # The Base Rate paid hourly, this is only required if the Remuneration Schedule Type is \"Hourly Rate\". Any number exceeding 8 decimal places will be rounded up.
    baseHourlyRate: typing.Union[int, float]

    additions: JobPatchRequestRemunerationScheduleAdditions

    additionsToTotal: JobPatchRequestRemunerationScheduleAdditionsToTotal

    breakdowns: JobPatchRequestRemunerationScheduleBreakdowns

    customFields: JobPatchRequestRemunerationScheduleCustomFields

class JobPatchRequestRemunerationSchedule(RequiredJobPatchRequestRemunerationSchedule, OptionalJobPatchRequestRemunerationSchedule):
    pass
