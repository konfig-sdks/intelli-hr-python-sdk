# coding: utf-8

"""
    intelliHR Public API

    You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)

    The version of the OpenAPI document: V1
    Contact: support@intellihr.co
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from intelli_hr_python_sdk.type.pay_grades_list_data_item_pay_grade_values import PayGradesListDataItemPayGradeValues

class RequiredPayGradesListDataItem(TypedDict):
    pass

class OptionalPayGradesListDataItem(TypedDict, total=False):
    # Description of the [Pay Grade](https://developers.intellihr.io/docs/v1/).
    description: str

    # The identifier string for the [Pay Grade](https://developers.intellihr.io/docs/v1/).
    id: str

    # Administrative, short code associated to the [Pay Grade](https://developers.intellihr.io/docs/v1/).
    code: str

    # User friendly name given to the [Pay Grade](https://developers.intellihr.io/docs/v1/).
    name: str

    # The date this [Pay Grade](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
    startDate: typing.Union[str, none_type]

    # The date this [Pay Grade](https://developers.intellihr.io/docs/v1/) ended or will end within the organisation.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
    endDate: typing.Union[str, none_type]

    # Specifies whether users can select this [Pay Grade](https://developers.intellihr.io/docs/v1/) in dropdowns.
    isEnabled: bool

    # Number of [Jobs](https://developers.intellihr.io/docs/v1/) that have been assigned this [Pay Grade](https://developers.intellihr.io/docs/v1/) in dropdowns.
    activeJobs: int

    # Allow this [Pay Grade](https://developers.intellihr.io/docs/v1/) value to be overwritten.
    isOverridable: bool

    # Stores the hourly rate for permanent [Jobs](https://developers.intellihr.io/docs/v1/).
    permanentHourlyRate: typing.Union[typing.Union[int, float], none_type]

    # PayGrade Currency Object Model
    permanentHourlyRateCurrency: typing.Union[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]], none_type]

    # Stores the hourly rate for casual [Jobs](https://developers.intellihr.io/docs/v1/).
    casualHourlyRate: typing.Union[typing.Union[int, float], none_type]

    # PayGrade Currency Object Model
    casualHourlyRateCurrency: typing.Union[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]], none_type]

    # Stores the annual salary for [Jobs](https://developers.intellihr.io/docs/v1/).
    annualSalary: typing.Union[typing.Union[int, float], none_type]

    # PayGrade Currency Object Model
    annualSalaryCurrency: typing.Union[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]], none_type]

    # The type of this [Pay Grade](https://developers.intellihr.io/docs/v1/)
    payGradeType: str

    payGradeValues: PayGradesListDataItemPayGradeValues

    # The [User](https://developers.intellihr.io/docs/v1/) who last changed this [Pay Grade](https://developers.intellihr.io/docs/v1/)
    changeUser: typing.Union[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]], none_type]

    # The [Employment Condition](https://developers.intellihr.io/docs/v1/) of this [Pay Grade](https://developers.intellihr.io/docs/v1/)
    employmentCondition: typing.Union[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]], none_type]

class PayGradesListDataItem(RequiredPayGradesListDataItem, OptionalPayGradesListDataItem):
    pass
